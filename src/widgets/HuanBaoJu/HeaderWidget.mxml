<?xml version="1.0" encoding="utf-8"?>
<TGISViewer:BaseWidget xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx" 
					   xmlns:TGISViewer="cn.seisys.TGISViewer.*" 
					   layout="absolute" 
					   height="38" 
					   fontFamily="宋体" fontSize="14"
					   creationComplete="this_creationCompleteHandler(event)" 
					   widgetConfigLoaded="this_widgetConfigLoadedHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			
			import cn.seisys.TGISViewer.AppEvent;
			
			/**
			 * 九宫格缩放的底图
			 * */
			[Embed(source="assets/images/HuanBaoJu/center/title_bar.png", 
                scaleGridTop="6", scaleGridBottom="34", 
                scaleGridLeft="6", scaleGridRight="186"
            )]
			[Bindable]
			public var _titleBackgroundImage:Class;
			
			/**
			 * 单月查询时的时间
			 * */
			[Bindable]
			private var _selectedMonth:Date;
			
			/**
			 * 多月查询时的开始时间列表，包括用于显示的字符串和用于查询的date对象
			 * */
			[Bindable]
			private var _startMonthAC:ArrayCollection;
			/**
			 * 多月查询时的结束时间列表，包括用于显示的字符串和用于查询的date对象
			 * */
			[Bindable]
			private var _endMonthAC:ArrayCollection;
			
			/**
			 * 下拉列表选择月份时的最久时间
			 * */
			private var _monthCount:int = 24;
			
			private var _timeFieldName:String;
			
			protected function this_creationCompleteHandler(event:FlexEvent):void
			{
				
			}
			
			protected function this_widgetConfigLoadedHandler(event:Event):void
			{
				var date:Date = new Date();
				//初始年月，没有配置则为当前时间
				if ( configXML.defaultyear[0] && configXML.defaultyear != "" )
				{
					var defaultYear:int = configXML.defaultyear;
					date.fullYear = defaultYear;
				}
				if ( configXML.defaultmonth[0] && configXML.defaultmonth != "" )
				{
					var defaultMonth:int = configXML.defaultmonth;
					date.month = defaultMonth;
				}
				_selectedMonth = date;
				
				_startMonthAC = new ArrayCollection();
				_endMonthAC = new ArrayCollection();
				//多月选择时时间范围为初始年月-monthCount
				for ( var i:int = 0; i < _monthCount; i++ )
				{
					var firstDayOfMonth:Date = new Date( _selectedMonth.fullYear, _selectedMonth.month - i, 1 );
					var lastDayOfMonth:Date = new Date( firstDayOfMonth.fullYear, firstDayOfMonth.month, 
						getLastDateOfMonth( firstDayOfMonth.fullYear, firstDayOfMonth.month + 1 )  );
					
					var startDateObj:Object = 
						{ 
							date: firstDayOfMonth, 
							formattedDate: dateTimeFormatterDisplay.format( firstDayOfMonth ) 
						};
					_startMonthAC.addItem( startDateObj );
					
					var endDateObj:Object = 
						{
							date: lastDayOfMonth,
							formattedDate: dateTimeFormatterDisplay.format( lastDayOfMonth )
						}
					_endMonthAC.addItem( endDateObj );
				}
				
				_timeFieldName = configXML.timefieldname;
				_timeFieldName = '"' + _timeFieldName + '"';
			}
			
			//打开区域分布图和Widet
			protected function btnQuYuFenBuTu_clickHandler(event:MouseEvent):void
			{
				btnQuYuFenBuTu.source = "assets/images/HuanBaoJu/center/b_qyfbt_d.png";
				btnDianWeiTu.source = "assets/images/HuanBaoJu/center/b_dwt.png";
				btnReDianTu.source = "assets/images/HuanBaoJu/center/b_rdt.png";
				
				openWidget( "区域分布图" );
				
				AppEvent.dispatch( AppEvent.CHANGE_LAYER_VISIBILITY_BY_NAME, 
					{ 
						serviceName: "信访点", 
						layerIds: "", 
						visible: false 
					} 
				);
				
				/*AppEvent.dispatch( AppEvent.CHANGE_LAYER_VISIBILITY_BY_NAME, 
					{ 
						serviceName: "插值图", 
						layerIds: "", 
						visible: false 
					} 
				);*/
				
				closeWidget( "信访热点" );
			}
			//打开点位图
			protected function btnDianWeiTu_clickHandler(event:MouseEvent):void
			{
				btnQuYuFenBuTu.source = "assets/images/HuanBaoJu/center/b_qyfbt.png";
				btnDianWeiTu.source = "assets/images/HuanBaoJu/center/b_dwt_d.png";
				btnReDianTu.source = "assets/images/HuanBaoJu/center/b_rdt.png";
				
				closeWidget( "区域分布图" );
				
				AppEvent.dispatch( AppEvent.CHANGE_LAYER_VISIBILITY_BY_NAME, 
					{ 
						serviceName: "信访点", 
						layerIds: "", 
						visible: true 
					} 
				);
				
				map.infoWindow.hide();
				
				/*AppEvent.dispatch( AppEvent.CHANGE_LAYER_VISIBILITY_BY_NAME, 
					{ 
						serviceName: "插值图", 
						layerIds: "", 
						visible: false 
					} 
				);*/
				
				closeWidget( "信访热点" );
			}
			//打开热点图
			protected function btnReDianTu_clickHandler(event:MouseEvent):void
			{
				btnQuYuFenBuTu.source = "assets/images/HuanBaoJu/center/b_qyfbt.png";
				btnDianWeiTu.source = "assets/images/HuanBaoJu/center/b_dwt.png";
				btnReDianTu.source = "assets/images/HuanBaoJu/center/b_rdt_d.png";
				
				closeWidget( "区域分布图" );
				
				AppEvent.dispatch( AppEvent.CHANGE_LAYER_VISIBILITY_BY_NAME, 
					{ 
						serviceName: "信访点", 
						layerIds: "", 
						visible: false 
					} 
				);
				
				map.infoWindow.hide();
				
				/*AppEvent.dispatch( AppEvent.CHANGE_LAYER_VISIBILITY_BY_NAME, 
					{ 
						serviceName: "插值图", 
						layerIds: "", 
						visible: true 
					} 
				);*/
				
				openWidget( "信访热点" );
			}
			//打开热点图
			protected function btnTuli_clickHandler(event:MouseEvent):void
			{
				openWidget( "图例" );
			}
			
			protected function btnMonthBackward_clickHandler(event:MouseEvent):void
			{
				var year:int = _selectedMonth.fullYear;
				//后退一个月
				var month:int = _selectedMonth.month - 1;
				var startDate:int = 1;
				//month从0开始，需要+1
				var endDate:int = getLastDateOfMonth( year, month + 1 );
				
				_selectedMonth = new Date( year, month, startDate );
				
				btnMonthForward.enabled = true;
				
				//开始时间为当月第一天
				var startDateString:String = dateTimeFormatterQuery.format( _selectedMonth );
				//结束时间为当月最后一天
				var endDateString:String = dateTimeFormatterQuery.format( new Date( year, month, endDate ) );
				var queryExpr:String = _timeFieldName + " >= date '" + startDateString + "' AND " + 
					_timeFieldName + " <= date '" + endDateString + "'";
				AppEvent.dispatch( AppEvent.HUANBAOJU_QUERYEXPRESSION_TIME, queryExpr );
			}
			
			protected function btnMonthForward_clickHandler(event:MouseEvent):void
			{
				var year:int = _selectedMonth.fullYear;
				//前进一个月
				var month:int = _selectedMonth.month + 1;
				var startDate:int = 1;
				//month从0开始，需要+1
				var endDate:int = getLastDateOfMonth( year, month + 1 );
				
				_selectedMonth = new Date( year, month, startDate );
				var date:Date = new Date();
				if ( _selectedMonth.fullYear == date.fullYear && _selectedMonth.month == date.month )
				{
					btnMonthForward.enabled = false;
				}
				
				//开始时间为当月第一天
				var startDateString:String = dateTimeFormatterQuery.format( _selectedMonth );
				//结束时间为当月最后一天
				var endDateString:String = dateTimeFormatterQuery.format( new Date( year, month, endDate ) );
				var queryExpr:String = _timeFieldName + " >= date '" + startDateString + "' AND " + 
					_timeFieldName + " <= date '" + endDateString + "'";
				AppEvent.dispatch( AppEvent.HUANBAOJU_QUERYEXPRESSION_TIME, queryExpr );
			}
			
			protected function btnBackThisMonth_clickHandler(event:MouseEvent):void
			{
				_selectedMonth = new Date();
				btnMonthForward.enabled = false;
			}
			
			protected function dplstStartMonth_changeHandler(event:IndexChangeEvent):void
			{
				timeSequenceQuery();
			}
			
			protected function dplstEndMonth_changeHandler(event:IndexChangeEvent):void
			{
				timeSequenceQuery();
			}
			
			private function timeSequenceQuery():void
			{
				var startDate:Date = dplstStartMonth.selectedItem.date;
				var endDate:Date = dplstEndMonth.selectedItem.date;
				var queryExpr:String = 
					_timeFieldName + " >= date '" + dateTimeFormatterQuery.format( startDate ) + "' AND " + 
					_timeFieldName + " <= date '" + dateTimeFormatterQuery.format( endDate ) + "'";
				AppEvent.dispatch( AppEvent.HUANBAOJU_QUERYEXPRESSION_TIME, queryExpr );
			}
			
			private function getLastDateOfMonth( year:int, month:int ):int
			{
				switch(month)
				{
					case 1:
					case 3:
					case 5:
					case 7:
					case 8:
					case 10:
					case 12:
						return 31;
					
					case 4:
					case 6:
					case 9:
					case 11:
						return 30;
						
					case 2:
						//闰年
						if ( ( year % 4 == 0 && year % 100 != 0 ) || year % 400 == 0 )
						{
							return 29;
						}
						else
						{
							return 28;
						}
					
					default:
						return 0;
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:DateTimeFormatter id="dateTimeFormatterDisplay" dateTimePattern="yyyy'年'MM'月'"/>
		<s:DateTimeFormatter id="dateTimeFormatterQuery" dateTimePattern="yyyy-MM-dd"/>
	</fx:Declarations>
	
	
	<s:Image width="100%" height="100%" 
			 source="{_titleBackgroundImage}"/>
	
	<s:HGroup width="100%" height="100%" 
			  paddingLeft="10" paddingRight="10" gap="5" 
			  verticalAlign="middle">
		<s:HGroup height="100%" verticalAlign="middle">
			<s:Button id="btnMonthBackward" 
					  skinClass="widgets.HuanBaoJu.skins.BackwardButtonSkin" 
					  useHandCursor="true" buttonMode="true" 
					  click="btnMonthBackward_clickHandler(event)"/>
			<s:Label id="lblMonthSelect" 
					 text="{dateTimeFormatterDisplay.format(_selectedMonth)}" 
					 color="0xffffff"/>
			<s:Button id="btnMonthForward" 
					  enabled="false"
					  skinClass="widgets.HuanBaoJu.skins.ForwardButtonSkin" 
					  useHandCursor="true" buttonMode="true" 
					  click="btnMonthForward_clickHandler(event)"/>
			
			<!--<s:Image source="assets/images/HuanBaoJu/center/sep.png" height="100%"/>-->
			
			<s:Button id="btnBackThisMonth" height="100%"
					  skinClass="widgets.HuanBaoJu.skins.BackThisMonthButtonSkin"
					  useHandCursor="true" buttonMode="true" 
					  click="btnBackThisMonth_clickHandler(event)"/>
		</s:HGroup>
		
		<s:HGroup height="100%" verticalAlign="middle" gap="10">
			<s:Label text="时间段: " 
					 color="0xffffff"/>
			<s:DropDownList id="dplstStartMonth" 
							width="125" 
							requireSelection="true"
							dataProvider="{_startMonthAC}" 
							labelField="formattedDate"
							skinClass="widgets.HuanBaoJu.skins.CustomDropDownListSkin" 
							change="dplstStartMonth_changeHandler(event)"/>
			<s:Label text="至"
					 color="0xffffff"/>
			<s:DropDownList id="dplstEndMonth" 
							width="125" 
							requireSelection="true"
							dataProvider="{_endMonthAC}"
							labelField="formattedDate"
							skinClass="widgets.HuanBaoJu.skins.CustomDropDownListSkin" 
							change="dplstEndMonth_changeHandler(event)"/>
		</s:HGroup>
		
		<s:HGroup height="100%" verticalAlign="middle" paddingLeft="15" gap="0">
			<s:Image source="assets/images/HuanBaoJu/center/map_bg.png"/>
			<s:Image id="btnQuYuFenBuTu" 
					 source="assets/images/HuanBaoJu/center/b_qyfbt_d.png"
					 buttonMode="true" useHandCursor="true" 
					 click="btnQuYuFenBuTu_clickHandler(event)"/>
			<s:Image id="btnDianWeiTu" 
					 source="assets/images/HuanBaoJu/center/b_dwt.png"
					 buttonMode="true" useHandCursor="true" 
					 click="btnDianWeiTu_clickHandler(event)"/>
			<s:Image id="btnReDianTu" 
					 source="assets/images/HuanBaoJu/center/b_rdt.png"
					 buttonMode="true" useHandCursor="true" 
					 click="btnReDianTu_clickHandler(event)"/>
			<!--s:Image id="btnTuli" 
					 source="assets/images/HuanBaoJu/center/b_tl2.png"
					 buttonMode="true" useHandCursor="true" 
					 click="btnTuli_clickHandler(event)"/-->
		</s:HGroup>
	</s:HGroup>
</TGISViewer:BaseWidget>
