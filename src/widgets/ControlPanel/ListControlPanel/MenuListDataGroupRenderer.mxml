<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:ListControlPanel="widgets.ControlPanel.ListControlPanel.*"
				implements="mx.managers.IFocusManagerComponent" 
				width="100%" height="30"
				focusEnabled="true" 
				buttonMode="true" useHandCursor="true" 
				autoDrawBackground="true" 
				dataChange="this_dataChangeHandler(event)" 
				click="this_clickHandler(event)" >
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.managers.IFocusManagerComponent;
			
			import spark.components.DataGroup;
			
			[Bindable]
			private var _menuItem:MenuItem;
			
			private var isLastItem:Boolean;
			
			protected function this_dataChangeHandler(event:FlexEvent):void
			{
				_menuItem = data as MenuItem;
				
				itemLabel.label = _menuItem.label;
				itemLabel.selected = _menuItem.open;
				
				if ( itemIndex == 0 )
				{
					scs.alpha = 1;
				}
				else if ( isLastItem )
				{
					scs.alpha = 0;
				}
				else
				{
					scs.alpha = 1;
				}
			}
			
			override public function set itemIndex(value:int):void
			{
				super.itemIndex = value;
				
				var dataGroup:DataGroup = parent as DataGroup;
				isLastItem = ( dataGroup && ( value == dataGroup.numElements - 1 ) );
			}
			
			protected function this_clickHandler(event:MouseEvent):void
			{
				dispatchEvent( new Event( "menuListItemClick", true ) );
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="hovered"/>
	</s:states>
	
	<!-- border/background rectangle -->
	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:SolidColor color="0x606268"/>
		</s:fill>
	</s:Rect>
	
	<s:Group width="100%" height="100%" >
		<!-- 单选框 -->
		<s:CheckBox id="itemLabel" color="0xffffff" left="5" verticalCenter="0"
					skinClass="cn.seisys.TGISViewer.skins.BlackCheckBoxSkin"/>
		
		<!-- label+下划线 -->
		<!--<s:Label id="itemLabel" horizontalCenter="0" verticalCenter="0"
				 color="0xffffff"
				 maxDisplayedLines="3"
				 showTruncationTip="true"/>-->
		
		<!--<s:Line id="openLine" width="20" 
				bottom="5" horizontalCenter="0" 
				includeInLayout="false" visible="false">
			<s:stroke>
				<s:SolidColorStroke caps="square"
									color="0xffffff"
									weight="2"/>
			</s:stroke>
		</s:Line>-->
		
		<!--divider-->
		<s:Line left="5" right="5" bottom="0">
			<s:stroke>
				<s:SolidColorStroke id="scs"
									caps="square"
									color="#555555"
									weight="2"/>
			</s:stroke>
		</s:Line>
	</s:Group>
</s:ItemRenderer>
