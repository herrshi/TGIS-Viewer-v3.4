<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx"
				xmlns:ControlPanel="widgets.ControlPanel.*" 
				xmlns:ListControlPanel="widgets.ControlPanel.ListControlPanel.*"
				implements="mx.managers.IFocusManagerComponent"
				autoDrawBackground="false"
				buttonMode="true"
				useHandCursor="true"
				focusEnabled="true" 
				click="this_clickHandler(event)" 
				dataChange="this_dataChangeHandler(event)" >
	
	<fx:Declarations>
		<s:Move3D id="moveEffect"
				  duration="200"
				  effectEnd="moveEffect_effectEndHandler(event)"
				  repeatBehavior="reverse"
				  repeatCount="2"
				  target="{itemLabel}"
				  yBy="-8"
				  yFrom="0"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.events.EffectEvent;
			import mx.events.FlexEvent;
			
			private const MENU_ITEM_CLICK:String = "menuItemClick";
			private const MENU_ITEM_MOUSE_OVER:String = "menuItemMouseOver";
			private const MENU_ITEM_MOUSE_OUT:String = "menuItemMouseOut";
			
			[Bindable]
			private var _menuItem:MenuItem;
			
			protected function this_dataChangeHandler(event:FlexEvent):void
			{
				_menuItem = data as MenuItem;
				itemLabel.text = _menuItem.label;
				openLine.visible = openLine.includeInLayout = _menuItem.open;
			}
			
			protected function this_clickHandler(event:MouseEvent):void
			{
				moveEffect.end();
				moveEffect.play();
			}
			
			protected function itemLabel_rollOverHandler(event:MouseEvent):void
			{
				dispatchEvent( new Event( MENU_ITEM_MOUSE_OVER, true ) );
			}
			
			protected function itemLabel_rollOutHandler(event:MouseEvent):void
			{
				dispatchEvent( new Event( MENU_ITEM_MOUSE_OUT, true ) );
			}
			
			private function moveEffect_effectEndHandler(event:EffectEvent):void
			{
				dispatchEvent( new Event( MENU_ITEM_CLICK, true ) ); // bubbles
			}
			
			override public function drawFocus(isFocused:Boolean):void
			{
				super.drawFocus( isFocused );
				
				// Popup the tooltip or remove the menu
				if ( isFocused )
				{
					itemLabel_rollOverHandler( null );
				}
				else
				{
					itemLabel_rollOutHandler( null );
				}
			}
			
			private var keyboardPressed:Boolean = false;
			
			override protected function keyDownHandler(event:KeyboardEvent):void
			{
				if ( event.keyCode != Keyboard.SPACE )
				{
					return;
				}
				
				keyboardPressed = true;
				event.updateAfterEvent();
			}
			
			override protected function keyUpHandler(event:KeyboardEvent):void
			{
				if ( event.keyCode != Keyboard.SPACE )
				{
					return;
				}
				
				if ( enabled && keyboardPressed )
				{
					// Mimic mouse click on the button.
					keyboardPressed = false;
					dispatchEvent( new MouseEvent( MouseEvent.CLICK ) );
				}
				event.updateAfterEvent();
			}
			
		]]>
	</fx:Script>
	
	
	<s:VGroup height="20" gap="2" horizontalAlign="center" verticalAlign="middle">
		<s:Label id="itemLabel"
				 color="0xffffff" fontWeight="bold"
				 rollOver="itemLabel_rollOverHandler(event)" 
				 rollOut="itemLabel_rollOutHandler(event)"/>
		<s:Line id="openLine" width="20" 
				includeInLayout="false" visible="false">
			<s:stroke>
				<s:SolidColorStroke caps="square"
									color="0xffffff"
									weight="2"/>
			</s:stroke>
		</s:Line>
	</s:VGroup>
</s:ItemRenderer>
